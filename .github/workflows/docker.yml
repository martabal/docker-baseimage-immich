name: Docker build

on:
  workflow_dispatch:
    inputs:
      version:
        description: "version"
        required: false
        type: string
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "0 12 * * 2"

concurrency:
  group: ${{ github.event_name != 'workflow_dispatch' && format('{0}-{1}', github.workflow, github.ref) || format('no-concurrency-{0}', github.run_id) }}
  cancel-in-progress: ${{ github.event_name != 'workflow_dispatch' }}

permissions:
  packages: write

jobs:
  build_docker:
    name: build docker images
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Set tags
        id: tags
        run: |
          echo "Generate tags"
          if [ "${{ inputs.version }}" != '' ]; then
            version="${{ inputs.version }}"
          else
            mkdir check_version
            cd check_version
            git init
            git remote add origin https://github.com/immich-app/base-images.git
            git fetch --tags https://github.com/immich-app/base-images.git
            version=$(git describe --tags $(git rev-list --tags --max-count=1))
            cd ..
          fi

          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "build_date=$(date +'%Y-%m-%dT%H:%M:%S%:z')" >> $GITHUB_OUTPUT
          echo "short_date=$(date '+%Y%m%d')" >> $GITHUB_OUTPUT
          echo "commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Generate docker image tags
        id: metadata
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f #v5.8.0
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/baseimage-immich
          tags: |
            type=ref,event=pr,value=${{ steps.tags.outputs.version }},enable=${{ github.event_name == 'pull_request' }}
            type=ref,event=pr,value=${{ steps.tags.outputs.version }},enable=${{ github.event_name == 'pull_request' }},suffix=-${{ steps.tags.outputs.version }}
            type=ref,event=pr,value=${{ steps.tags.outputs.version }},enable=${{ github.event_name == 'pull_request' }},suffix=-${{ steps.tags.outputs.version }}-${{ steps.tags.outputs.commit }}
            type=raw,value=latest,enable=${{ github.event_name != 'pull_request' }},suffix=${{ matrix.suffix }}
            type=raw,value=${{ steps.tags.outputs.version }},enable=${{ github.event_name != 'pull_request' }}
            type=raw,value=${{ steps.tags.outputs.version }},enable=${{ github.event_name != 'pull_request' }},suffix=-${{ steps.tags.outputs.commit }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 #v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 #v3.11.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 #v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker images
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 #v6.18.0
        with:
          provenance: false # prevent unknown architecture
          platforms: linux/amd64,linux/arm64
          push: ${{ !github.event.pull_request.head.repo.fork }}
          labels: ${{ steps.metadata.outputs.labels }}
          tags: ${{ steps.metadata.outputs.tags }}
          build-args: |
            BUILD_DATE=${{ steps.tags.outputs.build_date }}
            VERSION=${{ steps.tags.outputs.version }}
